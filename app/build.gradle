apply plugin: 'com.android.application'
apply plugin: 'androidx.navigation.safeargs'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.devtools.ksp'

android {
    compileSdk rootProject.compileSdkVersion

    defaultConfig {
        applicationId "com.thewizrd.simpleweather"
        // Specifies the fully-qualified class name of the test instrumentation runner.
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        // NOTE: Version Code Format (TargetSDK, Version Name, Build Number, Variant Code (Android: 00, WearOS: 01)
        versionCode 335820100
        versionName "5.8.2"

        vectorDrawables.useSupportLibrary true
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [allowBackup: false]
        }
        release {
            minifyEnabled true
            shrinkResources true
            crunchPngs true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [allowBackup: true]
        }
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }

    compileOptions {
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled true
        // Sets Java compatibility to Java 8
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlin {
        jvmToolchain(17)
    }

    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
        }
        fullgms {
            manifest.srcFile 'src/fullgms/AndroidManifest.xml'
        }
        nongms {
            manifest.srcFile 'src/main/AndroidManifest.xml'
        }
    }

    flavorDimensions 'gms'
    productFlavors {
        nongms {
            dimension 'gms'
            applicationIdSuffix ".foss"
            versionNameSuffix "-nongms"
            buildConfigField "boolean", "IS_NONGMS", "true"
        }
        fullgms {
            dimension 'gms'
            // Read the API key from ./secure.properties into R.string.maps_api_key
            def secureProps = new Properties()
            if (file("../secure.properties").exists()) {
                file("../secure.properties")?.withInputStream { secureProps.load(it) }
            }
            resValue "string", "maps_api_key", (secureProps.getProperty("MAPS_API_KEY") ?: "")
            buildConfigField "boolean", "IS_NONGMS", "false"
        }
    }
    namespace 'com.thewizrd.simpleweather'
}

dependencies {
    implementation project(":shared_resources")
    implementation project(":weather-api")
    implementation project(":common")
    fullgmsImplementation project(":extras")

    // Unit Testing
    androidTestImplementation "androidx.test:core:$test_core_version"

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation "androidx.test:runner:$test_runner_version"
    androidTestImplementation "androidx.test:rules:$test_rules_version"

    // Assertions
    androidTestImplementation "androidx.test.ext:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:truth:$androidx_truth_version"
    androidTestImplementation "com.google.truth:truth:$google_truth_version"

    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:$desugar_version"

    // Kotlin
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinx_version"

    implementation "androidx.core:core-ktx:$core_version"
    implementation "androidx.core:core-splashscreen:$coresplash_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.arch.core:core-runtime:$arch_core_runtime_version"
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation "androidx.recyclerview:recyclerview:$recyclerview_version"
    implementation "androidx.preference:preference-ktx:$preference_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "androidx.annotation:annotation:$annotation_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation 'androidx.palette:palette-ktx:1.0.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
    implementation "androidx.work:work-runtime-ktx:$work_version"
    implementation "androidx.work:work-multiprocess:$work_version"

    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    implementation "androidx.room:room-runtime:$room_version"
    ksp "androidx.room:room-compiler:$room_version"

    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    ksp "com.github.bumptech.glide:ksp:$glide_version"
    implementation "com.jakewharton.timber:timber:$timber_version"
    implementation "com.ibm.icu:icu4j:$icu4j_version"
    implementation 'com.github.skydoves:colorpickerview:2.2.4'

    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    ksp "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"
    implementation "com.squareup.moshi:moshi-adapters:$moshi_version"

    // Firebase
    fullgmsImplementation platform("com.google.firebase:firebase-bom:$firebase_version")
    fullgmsImplementation 'com.google.firebase:firebase-analytics'
    fullgmsImplementation 'com.google.firebase:firebase-crashlytics'
    fullgmsImplementation 'com.google.firebase:firebase-auth'
    fullgmsImplementation 'com.google.firebase:firebase-firestore'
    fullgmsImplementation 'com.google.firebase:firebase-messaging'
    fullgmsImplementation 'com.google.firebase:firebase-storage'
    fullgmsImplementation 'com.google.firebase:firebase-database'
    fullgmsImplementation 'com.google.firebase:firebase-config'
    fullgmsImplementation 'com.google.firebase:firebase-perf'

    fullgmsImplementation 'com.google.android.gms:play-services-base:18.2.0'
    fullgmsImplementation "com.google.android.gms:play-services-location:$gms_location_version"
    fullgmsImplementation 'com.google.android.gms:play-services-maps:18.1.0'
    fullgmsImplementation 'com.google.android.gms:play-services-wearable:18.1.0'
    fullgmsImplementation 'com.google.android.play:app-update-ktx:2.1.0'
    fullgmsImplementation 'com.google.android.play:feature-delivery-ktx:2.1.0'
    fullgmsImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$kotlinx_version"

    nongmsImplementation 'org.osmdroid:osmdroid-android:6.1.16'
}

if (getGradle().getStartParameter().getTaskRequests().toString().contains("Fullgms")) {
    apply plugin: 'com.google.gms.google-services'
    apply plugin: 'com.google.firebase.crashlytics'
    apply plugin: 'com.google.firebase.firebase-perf'
}