plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    compileSdk 31

    defaultConfig {
        minSdk 21
        targetSdk 31

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation": "$projectDir/schemas".toString(),
                        "room.incremental": "true",
                        "room.expandProjection": "true",
                        "stagGeneratedPackageName": "com.thewizrd.weather_api.stag.generated"
                ]
            }
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled true
        }
    }

    compileOptions {
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    sourceSets {
        androidTest {
            // Adds exported schema location as test app assets.
            assets.srcDirs += files("$projectDir/schemas".toString())
        }
    }

    externalNativeBuild {
        ndkBuild {
            path 'src/main/jni/Android.mk'
        }
    }

    flavorDimensions 'gms'
    productFlavors {
        nongms {
            dimension 'gms'
        }
        fullgms {
            dimension 'gms'
            externalNativeBuild {
                ndkBuild {
                    arguments "FULL_GMS_VERSION=true"
                }
            }
        }
    }
}

dependencies {
    implementation project(":shared_resources")
    fullgmsImplementation project(":extras")

    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'

    // Unit Testing
    androidTestImplementation 'androidx.test:core:1.4.0'

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'

    // Assertions
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.ext:truth:1.4.0'
    androidTestImplementation 'com.google.truth:truth:1.1.3'

    // Kotlin
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinx_version"

    implementation 'androidx.preference:preference-ktx:1.2.0'

    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    // Room migration testing
    androidTestImplementation "androidx.room:room-testing:$room_version"

    implementation 'com.squareup.okhttp3:okhttp:4.9.1'
    implementation 'com.ibm.icu:icu4j:71.1'
    implementation 'com.google.code.gson:gson:2.9.0'

    implementation("com.vimeo.stag:stag-library:2.6.0") {
        exclude group: "org.jetbrains", module: "annotations-java5"
    }
    kapt("com.vimeo.stag:stag-library-compiler:2.6.0") {
        exclude group: "org.jetbrains", module: "annotations-java5"
    }

    fullgmsImplementation 'com.google.android.libraries.places:places:2.6.0'
    fullgmsImplementation 'com.android.volley:volley:1.2.1' // Required by Places API ^^^
    fullgmsImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$kotlinx_version"
}

task keyCheck(type:Exec) {
    workingDir '../'
    commandLine 'cmd', '/c', 'keycheck.bat'

    doLast {
        executionResult.getOrNull()?.assertNormalExitValue()
    }
}

android.libraryVariants.all { variant ->
    def name = variant.flavorName
    if (name.contains('fullgms')) {
        variant.preBuildProvider.configure { dependsOn(keyCheck) }
    }
}